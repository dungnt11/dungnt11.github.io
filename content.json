{"meta":{"title":"Dũng Blog","subtitle":"","description":"","author":"Dung Nguyen","url":"https://dungnt11.github.io","root":"/"},"pages":[],"posts":[{"title":"Optimize render react với memorized function","slug":"Optimize-render-react-voi-memorized-function","date":"2021-07-11T16:17:25.000Z","updated":"2021-07-11T16:52:07.301Z","comments":true,"path":"2021/07/11/Optimize-render-react-voi-memorized-function/","link":"","permalink":"https://dungnt11.github.io/2021/07/11/Optimize-render-react-voi-memorized-function/","excerpt":"Mở đầuĐối với những bạn mới code React, việc làm cho nó chạy đúng đã là một cái gì đó hết sức vui vẻ rồi, và cái gì đến cũng sẽ đến, rồi ai cũng phải quan tâm cách mà React render như nào, làm sao để tránh bị render quá nhiều. Nói thì rất dễ, nhưng khi gặp phải một project đủ lớn, các bạn mới thấy việc kiểm soát render quan trọng như nào. Nếu không cẩn thận, rất có thể chúng ta sẽ rơi vào một tình trạng, đó là render forever 😅. Và mọi việc lớn đều bắt đầu bởi việc nhỏ, và hôm nay, mình sẽ đi bàn về một vấn đề, là làm sao để optimize render component.","text":"Mở đầuĐối với những bạn mới code React, việc làm cho nó chạy đúng đã là một cái gì đó hết sức vui vẻ rồi, và cái gì đến cũng sẽ đến, rồi ai cũng phải quan tâm cách mà React render như nào, làm sao để tránh bị render quá nhiều. Nói thì rất dễ, nhưng khi gặp phải một project đủ lớn, các bạn mới thấy việc kiểm soát render quan trọng như nào. Nếu không cẩn thận, rất có thể chúng ta sẽ rơi vào một tình trạng, đó là render forever 😅. Và mọi việc lớn đều bắt đầu bởi việc nhỏ, và hôm nay, mình sẽ đi bàn về một vấn đề, là làm sao để optimize render component. Memorized functionTrước hết, chúng ta hãy xem hình sau Hiểu đơn giản, thì memorized function là việc ghi nhớ function vào bộ nhớ, để function không bị khởi tạo lại. Gượng đã, nếu hiểu như vậy, thì chúng ta triển khai như nào? 12345678910111213141516171819function memorizedFn() &#123; const cache = &#123;&#125;; return function() &#123; return (&#123; setCache(path, val) &#123; if ('key' in cache) &#123; return cache[key]; &#125; cache[key] = val; return val; &#125;, get cacheByKey() &#123; if (!('key' in cache)) throw new Error(`Key $&#123;key&#125; not found`; return cache[key]; &#125; &#125;) &#125; &#125; Chúng ta có thể dễ dàng nhìn thấy, đây chính là Closure function. Ngay cả khi hàm memorizedFn đã được gọi, thì biến cache vẫn không bị giải phóng khỏi bộ nhớ, và chúng vẫn tiếp tục được sửa dụng trong function return. React’s memoizationReact có 3 API để ghi nhớ: useMemo và useCallback.Memo hay React.memo là một higher order component, giúp tăng hiệu suất trong một số trường hợp bằng cách ghi nhớ kết quả. Điều này có nghĩa là React sẽ bỏ qua việc render component và sử dụng lại kết quả được render cuối cùng. userCallback12345const makeFetchRequest = React.useCallback(() =&gt; ( body ? fetch('/post', fetchConfig) : null), [body, fetchConfig], ] ) userCallback nhận vào 2 đối số, thứ nhất là function cần ghi nhớ, thứ hai là mảng các phụ thuộc, nghĩa là nếu item trong mảng này thay đổi, hàm sẽ ngay lập tức được render lại. Nếu viết như dưới đây, thì hàm sẽ chỉ được init một lần. 12345const makeFetchRequest = React.useCallback(() =&gt; ( body ? fetch('/post', fetchConfig) : null), [], ] ) useMemoHãy bắt đầu với vấn đề đầu tiên và xem cách nào để chặn đánh giá lại những function không cần thiết. Trong demo sau, chúng ta có một component với 2 states: 1 state lưu trữ một number, 1 state lưu trữ một boolean. Chúng ta cần làm một vài tính toán cho state, vì vậy cần gọi hàm plusFive và render ra kết quả. 123456789101112const plusFive = (num) =&gt; &#123; console.log(\"I was called!\"); return num + 5;&#125;;export default function App() &#123; const [num, setNum] = useState(0); const [light, setLight] = useState(true); const numPlusFive = plusFive(num); return ( &lt;&gt;&#123;numPlusFive&#125;&lt;/&gt; ); Nếu bạn mở console, bạn sẽ thấy function plusFive được gọi khi click vào Update Number (set một giá trị mới cho biến number) , hoặc Toggle the light để thay đổi boolean (chú ý: nó không liên quan gì đến update number) Vậy làm thế nào để chặn điều này xảy ra? Bằng cách ghi nhớ lại (memoizing) plusFile, cho đến khi có một giá trị number mới thì lúc đấy mới gọi plusFile, ngay lập tức chúng ta sẽ nhận được kết quả 1const numPlusFive = useMemo(() =&gt; plusFive(num), [num]); useMemo nhận vào 2 tham số: 1 là function trả về một lời gọi hàm (plusFive), 2 là một mảng phụ thuộc. Chỉ khi nào mảng phụ thuộc thay đổi, thì function mới được gọi. useMemo sẽ trả về kết quả của việc thực hiện gọi hàm và lưu vào bộ nhớ để ngăn hàm gọi lại khi sử dụng cùng một mảng phụ thuộc (hay mảng phụ thuộc không thay đổi). Video","categories":[],"tags":[],"author":"Dung Nguyen"},{"title":"Fix lỗi undefined khi dùng thư viện bên thứ 3","slug":"Fix-loi-undefined-khi-dung-thu-vien-ben-thu-3","date":"2020-08-04T02:29:00.000Z","updated":"2021-07-11T10:35:20.520Z","comments":true,"path":"2020/08/04/Fix-loi-undefined-khi-dung-thu-vien-ben-thu-3/","link":"","permalink":"https://dungnt11.github.io/2020/08/04/Fix-loi-undefined-khi-dung-thu-vien-ben-thu-3/","excerpt":"Mở đầuNếu đã dùng thư viện bên thứ 3 cho project của mình, chắc hẳn bạn không còn quá xa lạ với những lỗi này Điều đáng nói ở đây là mặc dù mình gọi nó tại componentDidMount thì nó vẫn lỗi, trong khi log biến window vẫn ra bình thường.","text":"Mở đầuNếu đã dùng thư viện bên thứ 3 cho project của mình, chắc hẳn bạn không còn quá xa lạ với những lỗi này Điều đáng nói ở đây là mặc dù mình gọi nó tại componentDidMount thì nó vẫn lỗi, trong khi log biến window vẫn ra bình thường. Nguyên nhânCó 2 nguyên nhân dẫn đến hiện tượng này: 1. Do chúng ta gọi thư viện ở những nơi biến `window` chưa được hình thành 2. Do thư viện sử dụng webpack để build, nhưng chưa config để fix ( Đây cũng là 1 [bug](https://github.com/webpack/webpack/issues/6677) của webpack 4 hiện nay )Khắc phụcCách 1: Ta sẽ sử dụng 1 biến trong state để lưu thư viện 1state = &#123; lib: null &#125; Khi chạy componentDidMount ta sẽ là như sau, ở đây là với thư viện project mình sử dụng 123456789101112import('animation-timeline-js').then((mod) =&gt; &#123; const div = $('#timeline'); if (div) &#123; const model = &#123; rows: [] &#125; as TimelineModel; const options: TimelineOptions = &#123; id: div, ...TIME_LINE_CONFIG, &#125;; const tl = new mod.Timeline(options, model); updateStore(&#123; key: 'timelineRoot renderNow', value: [tl, !renderNow] &#125;); &#125; &#125;); Cách 2: Config lại webpack của thư viện Khi nhận ra lỗi sau Ta sẽ mò vào file thông báo lỗi Có thể thấy, webpack đã chuyển biến window thay vì this, vào 1 function tự chạy, lúc này ta cần sửa webpack.config.js. Cụ thể thêm dòng sau 1234567 output: &#123; path: resolve(__dirname, 'umd'), filename: 'lib.js', library: 'lib', umdNamedDefine: true, globalObject: 'this' //!!!This line&#125;, Nếu build lại, đẩy lên npm install lại mà vẫn lỗi, ta sẽ tìm toàn bộ biến window trong thư viện, trong hàm constructor của thư viện, thay vì truyền tham số của thư viện, ta sẽ truyền thêm biến window, tất cả biến window của thư viện sẽ lấy từ đối số truyền vào. Chúc mọi người buổi sáng vui vẻ ^^. Tham khảo https://webpack.js.org/configuration/output/#output-librarytarget https://medium.com/@JakeXiao/window-is-undefined-in-umd-library-output-for-webpack4-858af1b881df","categories":[],"tags":[{"name":"react","slug":"react","permalink":"https://dungnt11.github.io/tags/react/"}],"author":"Dung Nguyen"},{"title":"Xử lý DOM siêu ngầu trong React","slug":"Xu-ly-DOM-sieu-ngau-trong-React","date":"2020-08-02T04:20:00.000Z","updated":"2021-07-11T10:37:22.457Z","comments":true,"path":"2020/08/02/Xu-ly-DOM-sieu-ngau-trong-React/","link":"","permalink":"https://dungnt11.github.io/2020/08/02/Xu-ly-DOM-sieu-ngau-trong-React/","excerpt":"Mở đầu Hôm nay có hứng nên mình ra hơi nhiều bài so với mọi ngày. Vào thẳng vấn đề luôn nhé.","text":"Mở đầu Hôm nay có hứng nên mình ra hơi nhiều bài so với mọi ngày. Vào thẳng vấn đề luôn nhé. Vấn đề cần giải quyếtMình có một element như sau Phần component Color picker example là thành phần có thể kéo qua lại được. Hiểu chính xác hơn thì position của nó là absolute so với body. Khi click vào dải màu bên dưới, nó sẽ popup ra một bảng như sau: Yêu cầu đặt ra, khi click ra một vị trí bất kì bên ngoài, ta sẽ đóng cái bảng đó lại. Nếu chỉ là html, css rồi mọi thứ là react, ta làm việc rất dễ dàng, nhưng nếu mọi thứ đều nằm trong content phần Color picker example thì vấn đề lại phức tạp hơn rất nhiều. Khi ở trong “đất” của thằng cha, ta không thể bao trùm lên toàn bộ mọi thứ Ta sẽ có thằng &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt; là thằng bao trùm lên tất cả. Nó sẽ bị hiện tượng như sau, nếu anh em cố tình dùng css và html thì rất khó để chỉnh cho thằng overlay bao trùm cố định, vì đơn giản overlay không nằm chung cấp với body. Giải phápTa sẽ cần tạo thẻ div có class giống như thế, append vào body là sẽ cùng cấp chứ gì. Nhưng nếu làm như vậy, ta không thể bắt sự kiện onclick và tác động về state, vì đấy là DOM thật, không thể tác động vào virtual DOM, và Tèn ten, người hùng của chúng ta xuất hiện createPortal = ), đây là api của react, nên ta không cần install thêm cái gì, hiểu nôm na nó sẽ render 1 phần tử độc lập với &lt;div id=&quot;root&quot;&gt;&lt;/div&gt; mà react sinh ra, hoặc bất kì nơi nào bạn muốn. Ta sẽ tạo ra component như sau 1234567891011121314151617181920212223242526272829303132333435363738394041import React from &#39;react&#39;;import ReactDOM from &#39;react-dom&#39;;type TProps &#x3D; &#123; onClick: () &#x3D;&gt; void;&#125;;class BodyEnd extends React.Component&lt;TProps&gt; &#123; private el: HTMLDivElement; constructor(props: TProps) &#123; super(props); this.el &#x3D; document.createElement(&#39;div&#39;); this.el.id &#x3D; &#39;xo-overlay&#39;; this.el.style.position &#x3D; &#39;fixed&#39;; this.el.style.top &#x3D; &#39;0&#39;; this.el.style.left &#x3D; &#39;0&#39;; this.el.style.right &#x3D; &#39;0&#39;; this.el.style.bottom &#x3D; &#39;0&#39;; &#125; componentDidMount() &#123; const &#123; onClick &#125; &#x3D; this.props; this.el.onclick &#x3D; onClick; document.body.appendChild(this.el); &#125; componentWillUnmount() &#123; document.body.removeChild(this.el); &#125; render() &#123; const &#123; children &#125; &#x3D; this.props; return ReactDOM.createPortal( children, this.el, ); &#125;&#125;export &#123; BodyEnd &#125;; Khi đó bên muốn sử dụng chỉ cần 1&lt;BodyEnd onClick=&#123;() =&gt; this.toggleMe('open', false)&#125; /&gt; Vậy là từ DOM thật, ta đã gọi được ngược về DOM ảo, quá tuyệt phải không nào = )).","categories":[],"tags":[{"name":"react","slug":"react","permalink":"https://dungnt11.github.io/tags/react/"}],"author":"Dung Nguyen"},{"title":"Xử lý mọi thứ trong pages (nextjs)","slug":"Xu-ly-moi-thu-trong-pages-nextjs","date":"2020-08-02T04:02:00.000Z","updated":"2021-07-11T10:36:43.825Z","comments":true,"path":"2020/08/02/Xu-ly-moi-thu-trong-pages-nextjs/","link":"","permalink":"https://dungnt11.github.io/2020/08/02/Xu-ly-moi-thu-trong-pages-nextjs/","excerpt":"Giới thiệuHihu, lâu lắm rồi mình mới quay lại viết blog, thú thật là do mình lười vãi đạn ra, hôm nay mưa gió, xem code tự dưng mình phát hiện ra, tại sao phải tạo quá nhiều thư mục nhỉ ? Như mọi người đã biết, nếu để code trong thư mục pages thì mọi file mình viết đều trở thành các trang thực thụ. Vì vậy mỗi file đều là 1 trang, điều này nghe có vẻ hợp lý, nhưng nếu code quá dài hoặc quá nhiều logic, việc phân chia folder là điều tất yếu. Nhưng phân chia lại phải tạo file, mà tạo file lại chính là tạo trang.","text":"Giới thiệuHihu, lâu lắm rồi mình mới quay lại viết blog, thú thật là do mình lười vãi đạn ra, hôm nay mưa gió, xem code tự dưng mình phát hiện ra, tại sao phải tạo quá nhiều thư mục nhỉ ? Như mọi người đã biết, nếu để code trong thư mục pages thì mọi file mình viết đều trở thành các trang thực thụ. Vì vậy mỗi file đều là 1 trang, điều này nghe có vẻ hợp lý, nhưng nếu code quá dài hoặc quá nhiều logic, việc phân chia folder là điều tất yếu. Nhưng phân chia lại phải tạo file, mà tạo file lại chính là tạo trang. Giải phápNgồi nát óc suy nghĩ và tìm trên google, mình cũng đưa ra được 1 vài giải pháp như sau: Đánh lừa nextjs Nghe có vẻ dễ nhỉ : ), nhưng thực sự next yêu cầu export default. Ta có thể tận dụng điều này, ví dụ cấu trúc thư mục của mình như sau. Khi ta viết file trong test nó sẽ hiểu là page, lúc này chỉ cần dùng thủ thuật nhỏ export { default } from &#39;../index&#39;; thì mọi nội dung file constant.ts sẽ được nextjs bỏ qua, thay vào đó, khi người dùng truy cập /test/constant sẽ render index page. Hay chưa. Sử dụng next config (nên dùng) Trong next.config.js ta sẽ thêm đoạn này: 1234// next.config.js module.exports = &#123; pageExtensions: [\"page.tsx\", \"api.ts\"], &#125; Vậy là tất cả các file có đuôi page.tsx hoặc api.ts sẽ được hiểu là page. Cùng nhau chia lại file nào mọi người .","categories":[],"tags":[{"name":"nextjs","slug":"nextjs","permalink":"https://dungnt11.github.io/tags/nextjs/"}],"author":"Dung Nguyen"},{"title":"Vượt qua stress và áp lực tuổi 20","slug":"Vuot-qua-stress-va-ap-luc-tuoi-20","date":"2020-06-26T16:57:00.000Z","updated":"2021-07-11T10:36:28.828Z","comments":true,"path":"2020/06/26/Vuot-qua-stress-va-ap-luc-tuoi-20/","link":"","permalink":"https://dungnt11.github.io/2020/06/26/Vuot-qua-stress-va-ap-luc-tuoi-20/","excerpt":"Chào anh em, lâu lắm rồi mình mới lên sóng, thú thật thì dạo này mình cũng bận nhiều việc, học rồi đi làm, mọi thứ thật bận rộn. Tuy vậy nhưng mình thích như vậy lắm = ). Quãng thời gian áp lực về cuộc đời tuổi 20 mình cũng trải qua rồi, mà mình sớm hơn cơ, tầm 18-19 là quãng thời gian này xảy ra với mình. Mình suy nghĩ về mọi thứ, tương lai, bản thân và gia đình. Để mình kể lại nhá.","text":"Chào anh em, lâu lắm rồi mình mới lên sóng, thú thật thì dạo này mình cũng bận nhiều việc, học rồi đi làm, mọi thứ thật bận rộn. Tuy vậy nhưng mình thích như vậy lắm = ). Quãng thời gian áp lực về cuộc đời tuổi 20 mình cũng trải qua rồi, mà mình sớm hơn cơ, tầm 18-19 là quãng thời gian này xảy ra với mình. Mình suy nghĩ về mọi thứ, tương lai, bản thân và gia đình. Để mình kể lại nhá. Mình bắt đầu quan sát và suy nghĩ về mọi thứ từ khi còn nhỏ, cảm giác như trí tưởng tượng mình phong phú cực kì luôn ấy. Nên mọi hành động hay lời nói của mình mà nhỡ cái gì có mà mất mấy hôm suy nghĩ ấy :D chắc kiểu giống con gái nhở. Chính xác là đợt khi mình còn ngồi trên ghế nhà trường, mình chả bao giờ suy nghĩ gì cả, cuộc sống mọi ngày trôi qua đều như nhau. Niềm vui duy nhất khi đi học chắc là được nhìn thấy crush = ). Đợt ý thích bạn đấy vãi, mà cũng lâu lắm rồi tụi mình chẳng nói chuyện. Khoảng thời gian sau khi thi đại học đúng kiểu mình dính áp lực ấy. Không hẳn là chuyện điểm số, vì kiểu ngay từ đầu mình đã xác định vào được đại học thì tốt, không thì cũng chả sao. Đợt đỗ đại học mình mường tượng nhiều thứ lắm, nào là vào sẽ học các thứ kinh lắm rồi quen nhiều bạn nữ cute :vvv Hồi nhỏ nhà mình nghèo lắm, mình lớn lên trong sự thua thiệt với các bạn đồng chăng lứa đủ thứ. Nào là tình cảm, tiền bạc, rồi nhận thức. Đợt cấp 2 đúng kiểu khủng hoảng tâm lý luôn. Mình chả thông minh mấy nhưng kiểu học trường chuyên, chính chuyện này đã làm mình bị ám ảnh vô cùng. Ban đầu học cũng được, xong về sau tụi nó đi học thêm nhiều quá, với kiểu chúng nó cũng thông minh nữa, dần dần mình bị tụt xuống top ngu học của lớp. Đã thế còn thêm cái nghịch khỏe, nên phụ huynh người ta cũng bảo con đừng chơi với thằng này = ). Ờ, không chơi thì thôi, có gì đâu, chắc giờ người mình phải cảm ơn nhiều nhất là mẹ. Mẹ luôn nhồi vào đầu mình tư tưởng về tiền bạc. Nếu không giờ mình cũng chả biết đang ất ơ ở xó nào. Khủng hoảng tuổi 20 của mình lặp lại qua những dòng suy nghĩ. Sau khi học vài năm đại học xong, mình làm gì, mình sẽ trở nên giàu có bằng cách nào, khi mỗi tháng kiếm vài ba triệu. Làm một phép tính đơn giản, mỗi tháng cứ cho là bạn kiếm 20 củ đi, một năm 100 củ, trừ chi phí ăn tiêu, chắc còn 10 củ để dành, 1 năm để ra 120 củ, mất 10 năm bạn mới có 1 tỉ. Vậy thì làm bao giờ cho “có tiền”. Chưa kể hồi cấp 2 mình chả học cùng ai ở làng, bạn làng gần như người lạ. Sau cưới mình ai nó đi = )). Các bạn biết đấy, thời gian thì chẳng chừa một ai cả, bạn lớn lên cũng có nghĩa là người thân của bạn già đi. Đến một ngày bạn cũng phải lấy vợ, rồi làm tròn nghĩa vụ của người bố, người mẹ. Sau mấy tháng nghĩ kiểu đấy mình bắt đầu lao vào học, mỗi lần nản hay stress mình hay giải quyết theo 2 kiểu, một là ra ngoài, nhìn những thứ xung quanh mình. Khu mình có mấy nhà giàu vãi bài, chả biết họ làm gì, mà thấy suốt ngày chơi mà cứ mua hết thứ này đến thứ nọ. Mình hay đạp xe qua đây, nhìn và lại về bàn cố gắng thôi. Hai là mình xem mấy clip ấy, không phải mấy clip dạng lấy động lực hay đa cấp đâu = ). Mình thường xem một trong hai dạng, một là xem những người nghèo khó hơn mình, hai là xem những người giỏi hơi mình. Tin mình đi, xem khoảng 2-3 clip lại hừng hực ngay. Khoảng thời gian mình đang hỗn độn trong cuộc sống thì mình biết tới hai cuốn sách, Đắc nhân tâm và cha giàu cha nghèo, có thể nói hai cuốn sách này đã thay đổi cuộc đời mình nhiều lắm. Mình nhận ra bản thân lựa chọn sự thoải mái thay vì ổn định về tài chính, cũng như việc mà mình cần làm trong thời gian tới. Sau khi tìm được con đường cho bản thân rồi, thì đến khoảng thời gian mình muốn làm mọi thứ ấy, cảm giác như kiểu biết trước đáp án rồi làm bài tập vậy. Mình dành ra rất nhiều thời gian cho việc học. Nhớ hồi cuối 2017 đợt đấy mình dành mỗi ngày phải tầm 10-12 tiếng cho việc học code. Chưa kể đợt học quân sự, cả ngày ở trường, nóng vãi đất, tối về thì mệt mà mình vẫn cố ngồi vào học. Nhưng nếu làm như vậy một thời gian dài, cái mà bạn phải đánh đổi chính là sức khỏe và nhiều thứ khác. Sau đợt mình sống xa nhà, hôm đấy ngồi uống bia với cậu, mình có nói chuyện về cuộc sống mình chọn lựa, cũng như những dự định trong thời gian tới, mình phát hiện ra rằng, cái mình cần chính là thời gian. Cậu mình có khuyên như này: “Cháu còn trẻ, mấy năm đại học là quãng thời gian xây dựng mối quan hệ cũng như học những kĩ năng mới. Ta chỉ thành công khi đã có phương hướng cũng như có đủ kinh nghiệm trong cái mà ta làm”. Ngẫm lại thì cũng đúng, các cụ có câu “Giàu ba mươi tuổi chớ mừng, khó ba mươi tuổi em đừng vội lo.” Vậy nên, ở cái tuổi 20 này, mọi người đừng quá áp lực chuyện gì, cũng nên để tâm chăm sóc cho bản thân mình một chút, vì tuổi mà mình thực sự trưởng thành, chín chắn chưa phải lúc này, đừng cố làm những thứ mà bạn nghĩ nó dễ trong khi bạn chưa có kinh nghiệm. Hãy tìm ra con đường cho bản thân mình, cũng như con người mà bạn muốn trở thành. Hãy lắng nghe nhiều hơn là nói, chỉ khi bạn hội tụ đủ yếu tố về con người cũng như vật chất thì bạn mới thành công. Nếu bị stress quá hãy dừng công việc hiện tại lại, tìm cho bản thân một lối riêng, một khoảng lặng. Thành công không phải là bạn phải có nhiều tiền, có xe, có nhà, hay có vợ đẹp. Thành công theo mình chính là việc ngày mai bạn tiến bộ hơn ngày hôm nay, thế là quá đủ rồi.","categories":[],"tags":[{"name":"life","slug":"life","permalink":"https://dungnt11.github.io/tags/life/"}],"author":"Dung Nguyen"},{"title":"Hãy hiểu con gái nhiều hơn.","slug":"Con-gai","date":"2020-06-13T15:03:27.000Z","updated":"2021-07-11T10:35:41.216Z","comments":true,"path":"2020/06/13/Con-gai/","link":"","permalink":"https://dungnt11.github.io/2020/06/13/Con-gai/","excerpt":"Mở đầuLà con trai, chắc hẳn bạn đã từng nói chuyện với nhiều cô gái. Nhiều khi bạn cảm thấy mình khá ngớ ngẩn, hay thậm chí chờ nhiều giờ liền để được nàng rep tin nhắn. Hay bạn gặp phải tình trạng, khi cưa cẩm một cô gái, bạn không biết nên hẹn họ ra sao, rồi tặng quà gì vào những ngày đặc biệt. Đó là lý do vì sao bài post này ra đời. Mình sẽ chia sẻ đôi chút hiểu biết về con gái của mình. Tất cả đều là quan điểm cá nhân của mình.","text":"Mở đầuLà con trai, chắc hẳn bạn đã từng nói chuyện với nhiều cô gái. Nhiều khi bạn cảm thấy mình khá ngớ ngẩn, hay thậm chí chờ nhiều giờ liền để được nàng rep tin nhắn. Hay bạn gặp phải tình trạng, khi cưa cẩm một cô gái, bạn không biết nên hẹn họ ra sao, rồi tặng quà gì vào những ngày đặc biệt. Đó là lý do vì sao bài post này ra đời. Mình sẽ chia sẻ đôi chút hiểu biết về con gái của mình. Tất cả đều là quan điểm cá nhân của mình. Mình đã bắt đầu “chơi” cùng con gái từ năm cấp 2. À, mình trai thẳng nhé, chỉ là mình thích kiểu tìm hiểu mọi thứ xung quanh hơn thôi. Con gái á, thực ra họ cũng giống con trai mình, họ cũng có gu, cũng có những cái lập dị như bọn mình hết ấy. Do bản thân là một thằng khá nghịch nên từ cấp 1 mình đã ngồi cùng con gái. Ban đầu mình thấy thật ngớ ngẩn, khi chủ đề mà tụi nó quan tâm chính là mấy thứ mình chẳng hiểu gì. Cấp 2, 3 mình đều ngồi cùng con gái, ban đầu cũng chỉ là nói chuyện bình thường, rồi về sau mình để ý dần, và phát hiện ra những điều khá hay ho về họ. Thực sự thì mình chưa bao giờ thích một ai đó ngồi cùng, chẳng biết sao nữa, nhưng thú thật, mình là người khá tự ti về bản thân. Nhớ đợt cấp 2, hồi đấy chị em dậy thì ghê lắm, người phổng phao hẳn lên, tính cách cũng vì thế mà thay đổi. Có những hôm hiền khô, nhưng có những hôm khá gắt gỏng, động tí là cáu, sau mình hiểu rằng, những ngày họ khó ở như vậy cũng là phản ứng bình thường của tâm lý ngày đèn đỏ. Và thực ra thì mình thích kiểu nói chuyện với con gái hơn là mấy thằng bạn. Chủ đề mà mấy thằng con trai hay nói chuyện, ngoài game và gái ra, chả có cái mẹ gì. Còn các bạn nữ thì sao, ui xời, đủ thứ chuyện trên trời dưới biển. Thế mới biết, phụ nữ họ để ý xung quanh như nào. Chỉ một hành động nhỏ của bạn cũng đủ để họ bàn tán. Nên khi nói chuyện với con gái, bạn đừng nghĩ mình phải nói những chuyện cao siêu này nọ, đơn giản, họ chẳng quan tâm quá nhiều tới lời nói của bạn đâu. Cái chính là cảm xúc trong câu chuyện. Và đặc biệt là cảm xúc của họ khi đó. Có thể cùng một câu chuyện, cùng một người, nhưng ở những thời điểm khác nhau, chiều hướng có thể đi tới những quan điểm khác nhau. Bởi chính sự để ý của họ, nên thường họ nhớ khá kĩ về câu chuyện bạn nói. Khi nói chuyện qua FB với ai đó, nếu họ không rep tin nhắn bạn, cũng chẳng sao cả. Trong trường hợp bạn mới quen, thì rất có thể bạn chả là cái gì khiến họ phải bận tâm, họ có gia đình, có bạn bè, có công việc, thời điểm trước khi bạn tới, họ vẫn sống tốt, vậy chả có lý gì khi nhắn tin họ lại phải cho bạn vào vị trí số 1 cả. Còn nếu quen rồi, bạn nhắn họ không rep, có thể bạn nói chuyện quá nhạt, hoặc họ đang bận tâm tới nhiều cái khác hơn, và bạn không phải option được ưu tiên số 1. Con gái chảnh ?Câu này thực sự mình còn nghe nhiều hơn chuyện họ không rep tin nhắn ấy. Thực lòng mà nói, khi gặp một ông đúng gu, họ cũng thích vãi bài ra ấy, có điều, đàn ông chúng ta thể hiện chúng quá rõ ra ngoài, còn họ, họ giữ ý nhiều hơn. Con gái thực sự có khoảng thời gian thôi bạn ạ. Chúng được gọi là thanh xuân ấy, một cô gái tầm cấp 3 đến đại học, sẽ thay đổi khá nhiều về ngoại hình, họ không chỉ muốn đẹp hơn trong mắt người khác, mà họ còn không muốn bị già đi theo thời gian. Hãy bình thườngNếu từ đầu nói chuyện với một cô gái, quan điểm đầu tiên của mình sẽ là, làm bạn hay người yêu nhỉ. Hầu hết con trai đều có ý định tán tỉnh khi nói chuyện với con gái lạ, nhưng họ không dám nói ra, sau dần dần thành bạn. Bạn trách họ quá đáng á, bạn sai vãi bài rồi. Bạn thích họ, họ biết thừa, có dạo một đứa bạn thân mình chia sẻ “Độ này đang có mấy thằng tán t” = ), cái chính là bạn không quá nổi bật để họ bận tâm thôi. Hoặc có thích lại, hiếm khi con gái mở lời trước lắm, họ ngại đó. Vậy nên cứ nói chuyện bình thường thôi. Hãy lắng nghe nhiều hơnKhi nói chuyện với con gái nhiều, mình phát hiện ra, con trai chúng ta có xu hướng không lắng nghe phụ nữ nhiều lắm. Là con người, ai cũng có nhu cầu chia sẻ cuộc sống, bạn muốn một thì họ muốn mười. Có thể có những cô gái khi nói chuyện với ông này thì nói nhiều, còn với bạn thì quá nhạt nhẽo. Không hẳn họ quá khép kín, đơn giản bạn chưa biết lắng nghe, chưa khiến họ chia sẻ câu chuyện của mình. Nếu bạn lắng nghe tích cực, kiểu vừa nghe vừa phản hồi câu chuyện, trong đó đừng chia sẻ quá nhiều về bản thân, bạn sẽ là một anh bạn tốt đúng nghĩa đấy = ). Làm sao để nói chuyện bớt nhạt?Đọc sách, chăm chỉ hóng hớt, và cái quan trọng nhất, hãy chăm chú vào công việc hằng ngày của bạn. Đừng lúc nào cũng chăm chăm cái điện thoại, đợi nàng nhắn tới là rep tốc độ ánh sáng. Khi nói chuyện với con gái, ngoài việc biết lắng nghe, bạn cần gợi chuyện, kiến thức mới là thứ giúp bạn. Vậy nên hãy làm sao để bản thân hiểu nhiều thứ hơn trong mỗi ngày. Thời gianMột điều quan trọng trong việc chinh phục nàng, chính là thời gian. Đã có quá nhiều người mắc sai lầm, tới rồi đi trong thoáng chốc, họ chuyển hết mục tiêu này đến mục tiêu khác. Kết quả là, qua nhiều năm, họ vẫn là một thằng đang trong giai đoạn tìm hiểu phụ nữ. Tổng kết Hãy nâng cao giá trị của bản thân, quan sát nhiều hơn, lắng nghe nhiều hơn để hiểu họ, con gái không khó hiểu như chúng ta nghĩ. Đừng quá quan tâm họ, cái gì nhiều quá cũng không tốt. Hãy cho nhau những khoảng thời gian riêng Chú ý những câu chuyện họ nói Nếu bạn hài hước, đó sẽ là điểm cộng rất lớn Hãy lịch sự và tâm lý với phụ nữ","categories":[],"tags":[],"author":"Dung Nguyen"},{"title":"Tâm sự ngày cuối tuần","slug":"Tam-su-ngay-cuoi-tuan","date":"2020-06-05T16:14:00.000Z","updated":"2021-07-11T10:36:04.252Z","comments":true,"path":"2020/06/05/Tam-su-ngay-cuoi-tuan/","link":"","permalink":"https://dungnt11.github.io/2020/06/05/Tam-su-ngay-cuoi-tuan/","excerpt":"#1 Chắc do mới tạo blog, và bản thân là một người nhạy cảm, dễ bị cảm xúc xung quanh tác động, tối nay mình lại viết bài tâm sự chút về cuộc sống. Mình là một thằng con trai sống bằng tình cảm nhiều, mặc dù trông có vẻ tính toán này nọ, nhưng thật sự bên trong mình dễ bị xúc động. Mình càng ngày càng bị sợ cuộc sống xung quanh, cảm giác mọi thứ nó không liên quan tới nhau nhiều lắm, thật khó diễn tả, nhưng những sự vật sự việc mà mình thấy chúng đều có vẻ rời rạc nhau ấy. Mình thích nói chuyện với con gái, kiểu chẳng yêu, cũng chẳng bạn, thích những cuộc nói chuyện chẳng đi tới đâu. Độ này cuộc sống mình thay đổi nhiều quá, nhiều lúc có cảm giác ngày qua ngày, mình giống như một cái máy vậy, khi mà mọi thứ chẳng có gì đổi mới cả.","text":"#1 Chắc do mới tạo blog, và bản thân là một người nhạy cảm, dễ bị cảm xúc xung quanh tác động, tối nay mình lại viết bài tâm sự chút về cuộc sống. Mình là một thằng con trai sống bằng tình cảm nhiều, mặc dù trông có vẻ tính toán này nọ, nhưng thật sự bên trong mình dễ bị xúc động. Mình càng ngày càng bị sợ cuộc sống xung quanh, cảm giác mọi thứ nó không liên quan tới nhau nhiều lắm, thật khó diễn tả, nhưng những sự vật sự việc mà mình thấy chúng đều có vẻ rời rạc nhau ấy. Mình thích nói chuyện với con gái, kiểu chẳng yêu, cũng chẳng bạn, thích những cuộc nói chuyện chẳng đi tới đâu. Độ này cuộc sống mình thay đổi nhiều quá, nhiều lúc có cảm giác ngày qua ngày, mình giống như một cái máy vậy, khi mà mọi thứ chẳng có gì đổi mới cả. #2 Dạo trước mình có quen một em kém mình vài tuổi, hai đứa nói chuyện vui vẻ lắm, kiểu em đấy đúng kiểu con gái hợp gu nói chuyện ấy. Xong ờ, mình nhận ra có vẻ không chủ động trong việc nói chuyện lắm. Nên cũng gần tuần rồi chẳng nói chuyện. Cũng chẳng biết sao nữa, thực sự mà nói thì mình không có tình cảm gì cả, nhưng cái chính là mình thích kiểu nói chuyện như thế, nó vừa kiểu bạn, vừa kiểu yêu = ), thật khó hiểu. #3 Mình trước đi về, đoạn qua ngã tư mình hay đi qua, hay có người khuyết tật hay ăn xin lắm. Mình cũng chẳng tiếc gì vài chục biếu họ. Xong mấy lần mình đi qua, mình phát hiện ra vẫn bà lão ấy. Nhìn chắc tầm 70-80 tuổi gì đấy, mình cũng chả biết nữa, nhìn bà khổ lắm. Mình biếu bà tiền xong đi một đoạn, mà nước mắt đã rơi từ lúc nào. Thật sự chẳng hiểu sao mà bà trở nên như vậy nữa. Sau vài lần gặp lại, mình thấy sợ khi đỗ lại ở đoạn ngã tư ấy, mình sợ nhìn thấy những con người như vậy, sợ cái đói, cái nghèo, nhìn những người như vậy thật sự rất đau lòng. Xong hôm đến cửa công ti, mình thấy một anh bị tâm thần gì gì đấy, anh hỏi xin tiền mình. Vì lười mà mình đã nói: “Em hết tiền mặt rồi”, mà không hề kiểm tra lại ví, kiểu đang ngồi trên xe, đội mũ, đeo khẩu trang, đang đợi cửa. Mình biết đó là những lý do bao biện cho sự ích kỉ của bản thân. Nhưng thực sự sau vụ đó mình đã nghĩ tới anh đấy rất nhiều :(. #4 Chẳng hiểu sao mình thấy khá khó chịu với kiểu xem tin nhắn rồi không rep của một số người. Mình không biết họ bận hay như nào, nhưng thật sự cảm giác mình đang làm phiền họ ấy. #5 Tối nay mình tìm được bài nhạc kiểu hợp tâm trạng ấy. Nghe từ tối đến giờ, cảm giác bản thân đang thiếu tình cảm thật sự, cũng không hẳn là quá cần, nhưng những lúc như này mình rất muốn nói chuyện. Thú thật, mình cũng khá tự ti về bản thân, không đẹp trai cũng chưa thành đạt hay tài giỏi gì. Ở cái tuổi 21 này cuộc sống mà mình nhìn thấy thật sự có quá nhiều thứ đan xen. Cơ hội, thành công, thời gian, bản thân chúng cứ liên tục khiến mình suy nghĩ. Mình muốn đi nhanh hơn để trở nên tự do tài chính, mình đã rất cố gắng, mình thích kiểu có người động viên hay gì ấy những lúc như này. Chắc hôm nay mình nói vậy thôi. Mình làm việc tiếp phát, hi vọng sang tuần có những biến chuyển tốt đẹp hơn. :~~","categories":[],"tags":[{"name":"life","slug":"life","permalink":"https://dungnt11.github.io/tags/life/"}],"author":"Dung Nguyen"},{"title":"Serry tán gái cơ bản: Phần 1. Làm quen","slug":"tan-gai-co-ban-lam-quen","date":"2020-06-04T16:22:00.000Z","updated":"2021-07-11T10:36:10.412Z","comments":true,"path":"2020/06/04/tan-gai-co-ban-lam-quen/","link":"","permalink":"https://dungnt11.github.io/2020/06/04/tan-gai-co-ban-lam-quen/","excerpt":"Lời đầuLại là mình đây, hôm nay, không giống như mọi hôm khác, thay vì những bài viết chia sẻ về lập trình, code này nọ, nói thật đã là con người ai cũng có tâm hồn, có cuộc sống nội tâm riêng. Sau những ngày giờ làm việc mệt mỏi, cũng là lúc ta làm bạn với đôi tay = ), đùa chút chứ mình nghĩ là anh em làm code đa phần FA. Mình cũng đã từng như vậy, nhưng thay vì ngồi than thân trách phận anh em có thể nỗ lực hơn để có một cuộc sống tốt hơn. Mình nghĩ sẽ là một bài viết khá dài đấy, mình sẽ rất vui nếu bạn dành thời gian đọc chúng.","text":"Lời đầuLại là mình đây, hôm nay, không giống như mọi hôm khác, thay vì những bài viết chia sẻ về lập trình, code này nọ, nói thật đã là con người ai cũng có tâm hồn, có cuộc sống nội tâm riêng. Sau những ngày giờ làm việc mệt mỏi, cũng là lúc ta làm bạn với đôi tay = ), đùa chút chứ mình nghĩ là anh em làm code đa phần FA. Mình cũng đã từng như vậy, nhưng thay vì ngồi than thân trách phận anh em có thể nỗ lực hơn để có một cuộc sống tốt hơn. Mình nghĩ sẽ là một bài viết khá dài đấy, mình sẽ rất vui nếu bạn dành thời gian đọc chúng. Mình sẽ tập trung vào nói những phần liên quan tới tán gái nhé. Đầu tiên anh em cần chọn mục tiêu, theo kinh nghiệm của mình, những cô gái tầm kém hoặc hơn anh em một vài tuổi là ổn nhất. Nhất là ít tuổi hơn thì khả năng thành công là khá cao. Theo mình biết thì con gái đa phần thích con trai trưởng thành, nói thế thôi chứ mình biết thừa, trưởng thành thì có tiền, có sự nghiệp, có thời gian thì mới đi tán mấy em trẻ xinh như mộng chứ. Nhưng thực ra vẫn còn nhiều cô gái yêu bằng tâm hồn, mình nghĩ vậy, nên mọi người không nên đặt nặng quá việc mình phải như này, như kia thì mới tán gái. Cứ cho rằng có một ngày nào đó bạn giàu đi, khi yêu một cô gái cứ cho là thật lòng đi, thì thiên hạ họ cũng nhìn vào bạn với suy nghĩ, trâu già hám cỏ non. Còn bản thân mình nghĩ, sinh ra là con gái, được nhiều người theo đuổi cũng chưa phải là sướng, đơn giản là con gái họ có thanh xuân, thời gian sẽ lấy đi mọi thứ của họ. Nếu ra đường bạn vô tình gặp một cô gái đang trong thời kì mang bầu, bạn sẽ hiểu tại sao con gái lại khá chảnh hay khó gần ở thời điểm mười tám đôi mươi. Vậy nên chúng ta cứ vừa đi làm, đi học, kết hợp tán gái thôi, cứ nghĩ mà xem, chiều rảnh chút, 2 đứa ngồi cùng nhau trên con vỉa hè quen thuộc, em nâng điếu, châm bi, anh làm hơi thuốc lào sảng khoái, nói cười chí choé, làm thêm cốc nước chè bình thiên hạ, nói chuyện thế giới, tương lai. Thề chứ ông đ** nào mà chả muốn. Nhưng cái khó trong thời buổi giờ là mọi người quá dễ để kết nối đến nhau. Ví dụ như nhắn tin, mạng xã hội, rồi vô vàn những ứng dụng hẹn hò. Bạn thấy một cô gái dễ thương, bạn muốn lếu lều cô ấy, nhưng bạn phải hiểu rằng, ngoài kia, có hàng nghìn người cũng nghĩ giống bạn. Vì vậy, mục tiêu bạn chọn để chinh phục ban đầu rất quan trọng, nó như hướng đi vậy, giờ phổ biến nhất là làm quen qua mạng xã hội, hoặc gặp ngoài trước rồi nói chuyện. Điều kiện cần Làm quen qua mxhTường sạch, ảnh đầy đủ, ưa nhìn, và không share nhiều thứ xàm xàm. Nếu có những clip bạn chơi guitar hoặc ảnh bạn đi du lịch là điểm cộng rất lớn. Làm quen ngoài đờiBạn cần tự tin hơn những thằng khác, mồm mép chút và đặc biệt, ngoại hình lúc bạn gặp họ là điểm then chốt. Con gái sẽ đánh giá rất cao một anh chàng ăn mặc sạch sẽ, và đặc biệt người có chút mùi hương. Thậm chí lúc gặp bạn, nếu thấy trên tay bạn là quyển sách thì còn ngon hơn nữa. Tìm đối tượng MXHVào phần bạn bè, tìm những em mà mình có cảm giác hợp, tâm hồn to tròn, không quá nhiều like hay share quá nhiều. Ngoài đờiCái này khó hơn vì thời điểm bạn gặp họ ngắn, bạn phải để lại ấn tượng tốt hoặc biết từ trước mà họ không có ấn tượng xấu về bạn. Làm quenĐối với mạng xã hội, để làm quen một cô gái khá đơn giản, quan trọng là họ có muốn rep mình hay không thôi, để thành công bước này, chúng ta cần có những thủ thuật như sau, thi thoảng vào reaction bài viết, đừng thả tim hay thương thương (đcm cái icon này hãm vailon), thay vào đấy chúng ta sẽ ha ha hoặc wow tuỳ hứng. Thời điểm này, bạn nên âm thầm follow cô gái đó, để xem em kia quan tâm những gì, và thám thính được mình có những tình địch như nào. Đồng thời đọc comment liên tục, phán đoán tính cách của họ. Khi đủ thời gian để bạn hiểu cô gái đó, hãy bắt đầu bằng một câu nói, ví dụ cô gái đó có thói quen cf cuối tuần, nhưng hôm đấy cô ấy lại đăng một cái story sad kiểu cô đơn vailon, thì lúc đó là cơ hội của bạn. “Hôm nay em không đi cf à?” Câu làm quen này khiến con gái cực kì tò mò, họ không hiểu bạn là ai, sao bạn biết thói quen của cô ý. Nếu may mắn cô ấy rep trong hôm đó bạn đã thành công một nửa rồi. Còn không, tìm đứa khác đi, chứ mấy cô gái kiểu này không làm quen qua mạng được đâu. Khi đã được rep, cũng là lúc nó đã vào khám xét FB bạn xem bạn là thằng nào, có đẹp trai không. Mình chơi với con gái mình biết, chúng nó tò mò vô cùng. Bạn được rep chứng tỏ: Một là bạn hợp gu nó, 2 là bạn làm nó tò mò. Còn ngoài đời thì như nào, sau khi tìm được đối tượng, bạn cần tìm thời điểm để hành động. Cái này khá khó diễn đạt vì cuộc sống bên ngoài rất khác so với suy nghĩ bạn. Đừng với quá cao, kiểu bạn đi con wave ghẻ (như mình) thì đừng có đi làm quen với mấy em sâu chân dài, hay mấy con cổ đeo vàng, tay đeo nhẫn cưới = ). Và cách tốt nhất là tạo sự tình cờ, bài này tuy cũ nhưng muôn đời vẫn sử dụng được. Như mình đã nói ở trên, mùi hương trên cơ thể là cực kì quan trọng, bạn có thể đụng độ nàng, cái mà nàng nhớ về bạn là những lần cọ sát thực tế. Nhưng trò này nếu làm không tinh tế, thì bạn sẽ rất vô duyên. Bạn cũng đừng tự tin đến mức thấy một cô gái đang ngồi, cầm cốc cf đi sang bắt chuyện. Con gái tuy miệng nói thích con trai chủ động, nhưng lại cực kì đề phòng những thằng tự tin kiểu này. Thay vào đấy bạn sẽ bắt chuyện kiểu nhẹ nhàng thôi. Ví dụ này nhé, trong quán nước, bạn thấy em nhân viên khá xinh, bạn muốn làm quen em. EZ vãi cứt. Nó sẽ là đứa dọn bàn đúng không? bạn nhúng giấy vào nước, đừng nhúng nhiều quá, rồi xếp thành mặt cười, kèm mẩu giấy nhỏ, sdt anh là: abc. Nếu hứng thú nhắn anh nhé. Ối, lại trò gây tò mò. Mình khẳng định em nó mà thấy mẩu giấy cộng với cái mặt cười kia, kiểu gì chả cười tủm tỉm, và nó sẽ tìm đến bạn Nguyên tắc tán gái quan trọng: Đẩy đối phương về thế bị động, gây tò mò liên tiếp Qua cả 2 cách trên bạn đã có thể làm quen với cô gái mà bạn muốn rồi. Tất nhiên không phải là tất cả, nhưng phần nào bạn đã hơn 95~99% những thằng ngoài kia rồi. Tin mình đi, nếu ủng hộ mình, bạn có thể chia sẻ nó. Mình sẽ gặp lại bạn ở phần sau. Goodluck = )","categories":[],"tags":[{"name":"tán gái","slug":"tan-gai","permalink":"https://dungnt11.github.io/tags/tan-gai/"}],"author":"Dung Nguyen"},{"title":"Tạo admin quản lý hexo","slug":"Tao-admin-quan-ly-hexo","date":"2020-06-03T06:09:00.000Z","updated":"2021-07-11T10:36:17.772Z","comments":true,"path":"2020/06/03/Tao-admin-quan-ly-hexo/","link":"","permalink":"https://dungnt11.github.io/2020/06/03/Tao-admin-quan-ly-hexo/","excerpt":"Giới thiệuNhư anh em đã biết thì hexo là công cụ tạo blog với github rất mạnh của mấy anh khựa. Nhưng tưởng tượng mà xem, nếu bạn tạo blog, mà mỗi lần viết bài lại phải mở vscode xong chạy hexo new page abc rồi code file markdown. Một tá việc phải làm để có blog hoàn chỉnh. Nhưng hôm nay, cùng với hexo-admin ta có thể không cần dùng tới vscode nữa, mà chỉ đơn giản vào web và viết blog thôi :D, quá tuyệt đúng không.","text":"Giới thiệuNhư anh em đã biết thì hexo là công cụ tạo blog với github rất mạnh của mấy anh khựa. Nhưng tưởng tượng mà xem, nếu bạn tạo blog, mà mỗi lần viết bài lại phải mở vscode xong chạy hexo new page abc rồi code file markdown. Một tá việc phải làm để có blog hoàn chỉnh. Nhưng hôm nay, cùng với hexo-admin ta có thể không cần dùng tới vscode nữa, mà chỉ đơn giản vào web và viết blog thôi :D, quá tuyệt đúng không. Cài đặt Cài admin page 12npm install --save hexo-adminhexo server -d Sau đó mở localhost:4000/admin theo port mặc định là ta đã có thể vào trang admin rồi. Annh em có thể mày mò config username hoặc password cho ngầu cũng được. Cụ thể _config.yml 1234admin: username: # username password_hash: # mã hash sinh ra mật khẩu secret: # mã tạo jwt 2.Deploy hexo admin cần làm như sau: 2.1 Tạo file hexo-deploy.sh ở thư mục root 12#!/usr/bin/env shhexo g &amp;&amp; hexo d 2.2 Set quyền cho file chmod +x ./hexo-deploy.sh2.3 Trong _config.yml thêm đoạn code 123deploy: type: 'git' repo: https://username:token@github.com/username/username.github.io.git Trong đó mã token có thể tạo từ Git Token như sau: Nhớ add quyền Quay về với trang admin, viết bài rồi deploy thôi :D","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://dungnt11.github.io/tags/hexo/"}],"author":"Dung Nguyen"},{"title":"Logger nodejs tốt hơn với tracer","slug":"Logger-nodejs-tot-hon-voi-tracer","date":"2020-06-03T05:44:00.000Z","updated":"2021-07-11T10:35:47.960Z","comments":true,"path":"2020/06/03/Logger-nodejs-tot-hon-voi-tracer/","link":"","permalink":"https://dungnt11.github.io/2020/06/03/Logger-nodejs-tot-hon-voi-tracer/","excerpt":"Giới thiệuNhư anh em đã biết, nodejs tuy ngon nhưng khoản console.log còn khá tù túng. Ví dụ đơn giản, muốn xem log ở file nào, hay dòng nào gần như ngoài console.trace chẳng còn cách nào khác. Hoặc muốn log object lồng nhau ta cũng phải dùng util.inspect hay dùng trick JSON.stringify rất dài dòng. Nhưng hôm nay lại khác, mình xin giới thiệu đến anh em package tracer, log nodejs siêu ngầu :D","text":"Giới thiệuNhư anh em đã biết, nodejs tuy ngon nhưng khoản console.log còn khá tù túng. Ví dụ đơn giản, muốn xem log ở file nào, hay dòng nào gần như ngoài console.trace chẳng còn cách nào khác. Hoặc muốn log object lồng nhau ta cũng phải dùng util.inspect hay dùng trick JSON.stringify rất dài dòng. Nhưng hôm nay lại khác, mình xin giới thiệu đến anh em package tracer, log nodejs siêu ngầu :D Cài đặtMở terminal lên và gõ npm i tracer thôi. Rồi thêm đoạn code sau vào file app index: 12345678var logger = require('tracer').console(); logger.log('hello');logger.trace('hello', 'world');logger.debug('hello %s', 'world', 123);logger.info('hello %s %d', 'world', 123, &#123;foo:'bar'&#125;);logger.warn('hello %s %d %j', 'world', 123, &#123;foo:'bar'&#125;);logger.error('hello %s %d %j', 'world', 123, &#123;foo:'bar'&#125;, [1, 2, 3, 4], Object); Và tèn ten, kết quả nè Ta cũng có thể viết thành 1 hàm như sau, mang đi dùng rất tiện 1234567891011121314151617import tracer from 'tracer';const logger = tracer.colorConsole();// interfacetype Tlog = 'log' | 'trace' | 'debug' | 'info' | 'warn' | 'error';/** * Log data * @param text message * @param shop shop domain */const log = (text: string, type: Tlog = 'log'): void =&gt; &#123; logger[type](text);&#125;;export default log; Đối với anh em nào sử dụng Koajs có thể viết thành context như sau: 12import tracer from 'tracer';server.context.logger = tracer.colorConsole(); Đừng quên định nghĩa thêm type cho chúng koa.d.ts 1234567891011121314import &#123; BaseContext &#125; from '@types/koa';declare module 'koa' &#123; interface BaseContext &#123; logger: &#123; log: Function, trace: Function, debug: Function, info: Function, warn: Function, error: Function, &#125; &#125;&#125; Và bất cứ router nào có ctx chúng ta đều có thể log được dạng ctx.logger.[type]. Hi vọng qua bài viết các bạn có thể log hiển thị nhiều dữ liệu hơn cho quá trình view cũng như debug : ).","categories":[],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"https://dungnt11.github.io/tags/nodejs/"}],"author":"Dung Nguyen"},{"title":"Thêm comment gittalk vào hexo blog","slug":"theme-comment-gittalk-vao-hexo","date":"2020-06-03T00:39:00.000Z","updated":"2021-07-11T10:36:23.672Z","comments":true,"path":"2020/06/03/theme-comment-gittalk-vao-hexo/","link":"","permalink":"https://dungnt11.github.io/2020/06/03/theme-comment-gittalk-vao-hexo/","excerpt":"Đôi lời xàm xí tíDạo này công việc code vẫn thế, mà thi thoảng vướng bận chút chuyện tương tư, đại loại kiểu nhiều khi đi làm về, ngồi một mình vu vơ, đốt điếu thuốc luận sự đời. Cũng có chút buồn vì nhan sắc chẳng hơn ai, công việc thì cũng chẳng phải dạng hái ra tiền, bao em xinh tươi chạy trước mặt mà lực bất tòng tâm. Nhiều khi dặn lòng phải cố gắng thêm nữa để thay đổi số phận, nhưng con người mà, đôi khi vẫn bị ảnh hưởng bởi chuyện tình cảm. Độ này thú thật với anh em là mình đang thích một bạn, cũng chẳng biết có phải thích không nữa. Mà chắc kiểu cũng có chút, hmm, nhiều khi cũng muốn nhắn vài tin tâm sự mà lại chẳng biết nói gì. Thôi thì mở máy lên code tí cho đỡ buồn vậy. Thì hôm trước mình cũng tạo blog sau khi đọc bài viết của ông bỏ mẹ nào trên viblo ấy (Nếu ông bạn đọc được bài viết này thì cho tôi cảm ơn nhiều nhá). Mấy anh bên khựa đỉnh thật, config có tí được quả blog đẹp như mơ. Tâm sự chút với anh em có lẽ hơi nhiều, giờ vào phần chính thôi:","text":"Đôi lời xàm xí tíDạo này công việc code vẫn thế, mà thi thoảng vướng bận chút chuyện tương tư, đại loại kiểu nhiều khi đi làm về, ngồi một mình vu vơ, đốt điếu thuốc luận sự đời. Cũng có chút buồn vì nhan sắc chẳng hơn ai, công việc thì cũng chẳng phải dạng hái ra tiền, bao em xinh tươi chạy trước mặt mà lực bất tòng tâm. Nhiều khi dặn lòng phải cố gắng thêm nữa để thay đổi số phận, nhưng con người mà, đôi khi vẫn bị ảnh hưởng bởi chuyện tình cảm. Độ này thú thật với anh em là mình đang thích một bạn, cũng chẳng biết có phải thích không nữa. Mà chắc kiểu cũng có chút, hmm, nhiều khi cũng muốn nhắn vài tin tâm sự mà lại chẳng biết nói gì. Thôi thì mở máy lên code tí cho đỡ buồn vậy. Thì hôm trước mình cũng tạo blog sau khi đọc bài viết của ông bỏ mẹ nào trên viblo ấy (Nếu ông bạn đọc được bài viết này thì cho tôi cảm ơn nhiều nhá). Mấy anh bên khựa đỉnh thật, config có tí được quả blog đẹp như mơ. Tâm sự chút với anh em có lẽ hơi nhiều, giờ vào phần chính thôi: Lời đầuNếu anh em chưa biết tạo blog bằng hexo thì đọc qua bài viết bên trên nhé, config tí là ăn ấy mà. Còn để quản lý cũng như viết blog ngon hơn, anh em có thể dùng hexo-admin. Tốt nhất là dùng theme có sẵn cho nhanh, còn không anh em có thể vọc như dưới. Setup Đối với những bạn nào có theme rồi thì có thể bỏ qua bước code mà đến thẳng config bên dưới Nếu theme chưa có chức năng đếy thì bạn cần inject thêm chút code rồi config thôi Đầu tiên anh em cần tạo 1 app của github như sau Trong đó Homepage URL cũng như phần Authorization trỏ về github của anh em nhó :”) Sau khi tạo xong ta sẽ được Nhớ lưu lại clientID và Client Secret nhé Đối với những bạn chưa có theme cần npm i --save gitalk rồi tạo file layout/_partial/post/gittalk.ejs như sau 1234567891011121314151617&lt;% if (typeof(script) !== 'undefined' &amp;&amp; script) &#123; %&gt; &lt;!-- &lt;link rel=\"stylesheet\" href=\"https://unpkg.com/gitalk/dist/gitalk.css\"&gt; --&gt; &lt;script src=\"//cdn.jsdelivr.net/npm/gitalk@1.4.0/dist/gitalk.min.js\"&gt;&lt;/script&gt; &lt;script src=\"//cdn.jsdelivr.net/npm/blueimp-md5@2.10.0/js/md5.min.js\"&gt;&lt;/script&gt; &lt;script type=\"text/javascript\"&gt; var gitalk = new Gitalk(&#123; clientID: '&lt;%= theme.comment.gitalk.ClientID %&gt;', clientSecret: '&lt;%= theme.comment.gitalk.ClientSecret %&gt;', repo: '&lt;%= theme.comment.gitalk.repo %&gt;', owner: '&lt;%= theme.comment.gitalk.owner %&gt;', admin: ['&lt;%= theme.comment.gitalk.admin %&gt;'], id: md5(location.pathname), distractionFreeMode: true &#125;) gitalk.render('comments') &lt;/script&gt;&lt;% &#125; %&gt; Tiếp đến layout/_partial/article.ejs 1234567&lt; if (!index &amp;&amp; theme.gitalk.enable &amp;&amp; post.comments)&#123; &gt;&lt;- partial('post/gitalk', &#123; key: post.slug, title: post.title, url: config.url+url_for(post.path) &#125;) &gt;&lt; &#125; &gt; Nhúng vào layout/_partial/head.ejs thôi 1234&lt;% if (theme.gitalk.enable)&#123; %&gt; &lt;link rel=\"stylesheet\" href=\"/lib/gitalk/gitalk.css\"&gt; &lt;script src=\"/lib/gitalk/gitalk.min.js\"&gt;&lt;/script&gt;&lt;% &#125; %&gt; Giờ thì tới bước cấu hình trong _config.yml 1234567comment: gitalk: # gitalk. https://gitalk.github.io/ owner: # tên github của anh em (ex: dungnt11) admin: # tên github giống trên repo: # repo git (ex: dungnt11.github.io) ClientID: # GitHub Application Client ID. ClientSecret: # GitHub Application Client Secret. Sau đếy hexo g -d thôi :D. Tèn ten NoteAnh em cần bật cái này trước nhé","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://dungnt11.github.io/tags/hexo/"}],"author":"Dung Nguyen"},{"title":"Những mẹo nhỏ code JS gọn hơn","slug":"Nhung-meo-nho-code-JS-gon-hon","date":"2020-06-02T00:08:00.000Z","updated":"2021-07-11T10:35:59.332Z","comments":true,"path":"2020/06/02/Nhung-meo-nho-code-JS-gon-hon/","link":"","permalink":"https://dungnt11.github.io/2020/06/02/Nhung-meo-nho-code-JS-gon-hon/","excerpt":"Clear hoặc truncate một arrayChỉ bằng cách thay đổi length, bạn có thể clear hoặc truncate một array mà ko cần reassign nó.12345678const arr = [11, 22, 33, 44, 55, 66];// truncantingarr.length = 3;console.log(arr); //=&gt; [11, 22, 33]// clearingarr.length = 0;console.log(arr); //=&gt; []console.log(arr[2]); //=&gt; undefined","text":"Clear hoặc truncate một arrayChỉ bằng cách thay đổi length, bạn có thể clear hoặc truncate một array mà ko cần reassign nó.12345678const arr = [11, 22, 33, 44, 55, 66];// truncantingarr.length = 3;console.log(arr); //=&gt; [11, 22, 33]// clearingarr.length = 0;console.log(arr); //=&gt; []console.log(arr[2]); //=&gt; undefined Truyền param dễ hiểu hơnVí dụ ta có đoạn code như sau123function(name, age) &#123; return `$&#123;name&#125; $&#123;age&#125;`; &#125; lúc này bên gọi hàm sẽ rất khó để biết được cần truyền name hay age trước. Lúc này ta sẽ dùng123function(&#123;name, age&#125;) &#123; return `$&#123;name&#125; $&#123;age&#125;`; &#125; Vậy là ta cần truyền đúng object rất rõ ràng rồi nhé. Còn đối với ông nào code ts thì khỏi cần luôn, vì nó hỗ trợ tận răng rồi :D Format console.logĐối với nodejs ta có object như sau Đôi khi ta muốn log kiểu này, nhưng node đã rút gọn chúng. Vậy thì muốn xem toàn bộ nội dung ta làm như nào?Sử dụng util 123456const util = require('util') console.log(util.inspect(myObject, &#123;showHidden: false, depth: null&#125;)) // alternative shortcut console.log(util.inspect(myObject, false, null, true /* enable colors */)) Sử dụng JSON.stringify 1console.log(JSON.stringify(myObject, null, 2)); Trong đó null là độ sâu 2 là khoảng cách thụt lề Remove các phần tử bị trùng khỏi mảng123const removeDuplicateItems = arr =&gt; [...new Set(arr)];removeDuplicateItems([42, 'foo', 42, 'foo', true, true]);//=&gt; [42, \"foo\", true] Flat mảng đa chiều12const arr = [11, [22, 33], [44, 55], 66];const flatArr = [].concat(...arr); //=&gt; [11, 22, 33, 44, 55, 66] Đổi chỗ vị trí mảng1const [a, b] = [b, a];","categories":[],"tags":[{"name":"js","slug":"js","permalink":"https://dungnt11.github.io/tags/js/"}],"author":"Dung Nguyen"},{"title":"Đôi lời gửi gắm","slug":"blog1","date":"2020-06-01T00:56:00.000Z","updated":"2021-07-11T03:13:51.351Z","comments":true,"path":"2020/06/01/blog1/","link":"","permalink":"https://dungnt11.github.io/2020/06/01/blog1/","excerpt":"","text":"Lời đầuMình làm web cũng một thời gian rồi, mình rất thích code và học những thứ mới mẻ, mình rất thích chia sẻ chúng cho mọi người. Vì công việc và học tập khá bận rộn, mình ít có thời gian làm những sản phẩm kiểu blog như này. Cũng như bao ngày mình có thói quen lên thiendia, viblo, … update những tin tức mới, vô tình mình biết về hexo, một quả tạo blog cá nhân đỉnh cao của mấy ông bên khựa. Sau một hồi config mình có blog như này đây. Từ nay mình sẽ cố gắng viết bài chia sẻ với mọi người, hi vọng sẽ làm mọi người hứng thú.","categories":[],"tags":[{"name":"life","slug":"life","permalink":"https://dungnt11.github.io/tags/life/"}]}],"categories":[],"tags":[{"name":"react","slug":"react","permalink":"https://dungnt11.github.io/tags/react/"},{"name":"nextjs","slug":"nextjs","permalink":"https://dungnt11.github.io/tags/nextjs/"},{"name":"life","slug":"life","permalink":"https://dungnt11.github.io/tags/life/"},{"name":"tán gái","slug":"tan-gai","permalink":"https://dungnt11.github.io/tags/tan-gai/"},{"name":"hexo","slug":"hexo","permalink":"https://dungnt11.github.io/tags/hexo/"},{"name":"nodejs","slug":"nodejs","permalink":"https://dungnt11.github.io/tags/nodejs/"},{"name":"js","slug":"js","permalink":"https://dungnt11.github.io/tags/js/"}]}